version: "3.7"
services:
  sports-monitor:
    image: "my-sport-monitor-test-app:latest"
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/sportsMonitor"]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-database:5432/postgres
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 1024M
        reservations:
          cpus: '0.50'
          memory: 512M
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
        window: 40s
    networks:
      - monitor-net
    depends_on:
      postgres-database:
        condition: service_healthy

  postgres-database:
    image: "postgres:latest"
    ports:
      - "5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "db_prod"]
      timeout: 20s
      retries: 10
    deploy:
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
        window: 40s
      resources:
        limits:
          cpus: '2.0'
          memory: 4096M
        reservations:
          cpus: '1.0'
          memory: 2048M
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    volumes:
      - database-volume:/var/lib/postgresql/data/
    networks:
      - monitor-net
networks:
  monitor-net: {}
volumes:
  database-volume: {}